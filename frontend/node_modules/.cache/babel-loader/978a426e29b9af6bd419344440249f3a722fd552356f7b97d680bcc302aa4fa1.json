{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sangharsh Walde\\\\OneDrive\\\\Desktop\\\\Amazon_Listing_Optimizer1\\\\frontend\\\\src\\\\components\\\\ComparisonCard.js\";\nimport React from 'react';\nimport { Box, Typography, Paper, Chip } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ComparisonCard = ({\n  title,\n  content,\n  type,\n  isList = false,\n  isKeywords = false,\n  emptyPlaceholder = 'No content available',\n  note\n}) => {\n  const getCardStyle = () => {\n    switch (type) {\n      case 'original':\n        return {\n          borderLeft: '4px solid #9e9e9e'\n        };\n      case 'optimized':\n        return {\n          borderLeft: '4px solid #2E7D32'\n        };\n      case 'keywords':\n        return {\n          borderLeft: '4px solid #FF9900'\n        };\n      default:\n        return {};\n    }\n  };\n  const renderContent = () => {\n    // Keywords chips\n    if (isKeywords) {\n      if (Array.isArray(content) && content.length > 0) {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 1,\n            mt: 2\n          },\n          children: content.map((keyword, index) => /*#__PURE__*/_jsxDEV(Chip, {\n            label: keyword,\n            color: \"secondary\",\n            variant: \"outlined\",\n            sx: {\n              fontWeight: 'medium'\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          mt: 2,\n          color: 'text.secondary'\n        },\n        children: emptyPlaceholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Bullet list\n    if (isList) {\n      if (Array.isArray(content) && content.length > 0) {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          component: \"ul\",\n          sx: {\n            pl: 2,\n            mt: 2\n          },\n          children: content.map((item, index) => /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"li\",\n            variant: \"body1\",\n            sx: {\n              mb: 1\n            },\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          mt: 2,\n          color: 'text.secondary'\n        },\n        children: emptyPlaceholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Plain text content (e.g., description/title)\n    const text = typeof content === 'string' ? content.trim() : '';\n    if (text) {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          mt: 2,\n          whiteSpace: 'pre-wrap'\n        },\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        mt: 2,\n        color: 'text.secondary'\n      },\n      children: emptyPlaceholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 3,\n      height: '100%',\n      borderRadius: 2,\n      ...getCardStyle()\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      component: \"h3\",\n      fontWeight: \"medium\",\n      color: type === 'optimized' ? 'primary.main' : type === 'keywords' ? 'secondary.main' : 'text.primary',\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), note ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"caption\",\n      sx: {\n        mt: 1,\n        color: 'text.secondary'\n      },\n      children: note\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : null, renderContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_c = ComparisonCard;\nexport default ComparisonCard;\nvar _c;\n$RefreshReg$(_c, \"ComparisonCard\");","map":{"version":3,"names":["React","Box","Typography","Paper","Chip","jsxDEV","_jsxDEV","ComparisonCard","title","content","type","isList","isKeywords","emptyPlaceholder","note","getCardStyle","borderLeft","renderContent","Array","isArray","length","sx","display","flexWrap","gap","mt","children","map","keyword","index","label","color","variant","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","component","pl","item","mb","text","trim","whiteSpace","p","height","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/Sangharsh Walde/OneDrive/Desktop/Amazon_Listing_Optimizer1/frontend/src/components/ComparisonCard.js"],"sourcesContent":["import React from 'react';\nimport { Box, Typography, Paper, Chip } from '@mui/material';\n\nconst ComparisonCard = ({ title, content, type, isList = false, isKeywords = false, emptyPlaceholder = 'No content available', note }) => {\n  const getCardStyle = () => {\n    switch (type) {\n      case 'original':\n        return {\n          borderLeft: '4px solid #9e9e9e',\n        };\n      case 'optimized':\n        return {\n          borderLeft: '4px solid #2E7D32',\n        };\n      case 'keywords':\n        return {\n          borderLeft: '4px solid #FF9900',\n        };\n      default:\n        return {};\n    }\n  };\n\n  const renderContent = () => {\n    // Keywords chips\n    if (isKeywords) {\n      if (Array.isArray(content) && content.length > 0) {\n        return (\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 2 }}>\n            {content.map((keyword, index) => (\n              <Chip \n                key={index} \n                label={keyword} \n                color=\"secondary\" \n                variant=\"outlined\" \n                sx={{ fontWeight: 'medium' }}\n              />\n            ))}\n          </Box>\n        );\n      }\n      return (\n        <Typography variant=\"body1\" sx={{ mt: 2, color: 'text.secondary' }}>\n          {emptyPlaceholder}\n        </Typography>\n      );\n    }\n    \n    // Bullet list\n    if (isList) {\n      if (Array.isArray(content) && content.length > 0) {\n        return (\n          <Box component=\"ul\" sx={{ pl: 2, mt: 2 }}>\n            {content.map((item, index) => (\n              <Typography component=\"li\" key={index} variant=\"body1\" sx={{ mb: 1 }}>\n                {item}\n              </Typography>\n            ))}\n          </Box>\n        );\n      }\n      return (\n        <Typography variant=\"body1\" sx={{ mt: 2, color: 'text.secondary' }}>\n          {emptyPlaceholder}\n        </Typography>\n      );\n    }\n    \n    // Plain text content (e.g., description/title)\n    const text = typeof content === 'string' ? content.trim() : '';\n    if (text) {\n      return (\n        <Typography variant=\"body1\" sx={{ mt: 2, whiteSpace: 'pre-wrap' }}>\n          {text}\n        </Typography>\n      );\n    }\n    return (\n      <Typography variant=\"body1\" sx={{ mt: 2, color: 'text.secondary' }}>\n        {emptyPlaceholder}\n      </Typography>\n    );\n  };\n\n  return (\n    <Paper \n      sx={{ \n        p: 3, \n        height: '100%', \n        borderRadius: 2,\n        ...getCardStyle()\n      }}\n    >\n      <Typography \n        variant=\"h6\" \n        component=\"h3\" \n        fontWeight=\"medium\"\n        color={type === 'optimized' ? 'primary.main' : type === 'keywords' ? 'secondary.main' : 'text.primary'}\n      >\n        {title}\n      </Typography>\n      {note ? (\n        <Typography variant=\"caption\" sx={{ mt: 1, color: 'text.secondary' }}>\n          {note}\n        </Typography>\n      ) : null}\n      \n      {renderContent()}\n    </Paper>\n  );\n};\n\nexport default ComparisonCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}