{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sangharsh Walde\\\\OneDrive\\\\Desktop\\\\AmazonLISTINGAppR\\\\frontend\\\\src\\\\components\\\\ComparisonCard.js\";\nimport React from 'react';\nimport { Box, Typography, Paper, Chip } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ComparisonCard = ({\n  title,\n  content,\n  type,\n  isList = false,\n  isKeywords = false\n}) => {\n  const getCardStyle = () => {\n    switch (type) {\n      case 'original':\n        return {\n          borderLeft: '4px solid #9e9e9e'\n        };\n      case 'optimized':\n        return {\n          borderLeft: '4px solid #2E7D32'\n        };\n      case 'keywords':\n        return {\n          borderLeft: '4px solid #FF9900'\n        };\n      default:\n        return {};\n    }\n  };\n  const renderContent = () => {\n    if (isKeywords && Array.isArray(content)) {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: 1,\n          mt: 2\n        },\n        children: content.map((keyword, index) => /*#__PURE__*/_jsxDEV(Chip, {\n          label: keyword,\n          color: \"secondary\",\n          variant: \"outlined\",\n          sx: {\n            fontWeight: 'medium'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    }\n    if (isList && Array.isArray(content)) {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        component: \"ul\",\n        sx: {\n          pl: 2,\n          mt: 2\n        },\n        children: content.map((item, index) => /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"li\",\n          variant: \"body1\",\n          sx: {\n            mb: 1\n          },\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        mt: 2,\n        whiteSpace: 'pre-wrap'\n      },\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 3,\n      height: '100%',\n      borderRadius: 2,\n      ...getCardStyle()\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      component: \"h3\",\n      fontWeight: \"medium\",\n      color: type === 'optimized' ? 'primary.main' : type === 'keywords' ? 'secondary.main' : 'text.primary',\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), renderContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_c = ComparisonCard;\nexport default ComparisonCard;\nvar _c;\n$RefreshReg$(_c, \"ComparisonCard\");","map":{"version":3,"names":["React","Box","Typography","Paper","Chip","jsxDEV","_jsxDEV","ComparisonCard","title","content","type","isList","isKeywords","getCardStyle","borderLeft","renderContent","Array","isArray","sx","display","flexWrap","gap","mt","children","map","keyword","index","label","color","variant","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","component","pl","item","mb","whiteSpace","p","height","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/Sangharsh Walde/OneDrive/Desktop/AmazonLISTINGAppR/frontend/src/components/ComparisonCard.js"],"sourcesContent":["import React from 'react';\nimport { Box, Typography, Paper, Chip } from '@mui/material';\n\nconst ComparisonCard = ({ title, content, type, isList = false, isKeywords = false }) => {\n  const getCardStyle = () => {\n    switch (type) {\n      case 'original':\n        return {\n          borderLeft: '4px solid #9e9e9e',\n        };\n      case 'optimized':\n        return {\n          borderLeft: '4px solid #2E7D32',\n        };\n      case 'keywords':\n        return {\n          borderLeft: '4px solid #FF9900',\n        };\n      default:\n        return {};\n    }\n  };\n\n  const renderContent = () => {\n    if (isKeywords && Array.isArray(content)) {\n      return (\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 2 }}>\n          {content.map((keyword, index) => (\n            <Chip \n              key={index} \n              label={keyword} \n              color=\"secondary\" \n              variant=\"outlined\" \n              sx={{ fontWeight: 'medium' }}\n            />\n          ))}\n        </Box>\n      );\n    }\n    \n    if (isList && Array.isArray(content)) {\n      return (\n        <Box component=\"ul\" sx={{ pl: 2, mt: 2 }}>\n          {content.map((item, index) => (\n            <Typography component=\"li\" key={index} variant=\"body1\" sx={{ mb: 1 }}>\n              {item}\n            </Typography>\n          ))}\n        </Box>\n      );\n    }\n    \n    return (\n      <Typography variant=\"body1\" sx={{ mt: 2, whiteSpace: 'pre-wrap' }}>\n        {content}\n      </Typography>\n    );\n  };\n\n  return (\n    <Paper \n      sx={{ \n        p: 3, \n        height: '100%', \n        borderRadius: 2,\n        ...getCardStyle()\n      }}\n    >\n      <Typography \n        variant=\"h6\" \n        component=\"h3\" \n        fontWeight=\"medium\"\n        color={type === 'optimized' ? 'primary.main' : type === 'keywords' ? 'secondary.main' : 'text.primary'}\n      >\n        {title}\n      </Typography>\n      \n      {renderContent()}\n    </Paper>\n  );\n};\n\nexport default ComparisonCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}